#!/bin/bash

if [ ! -f ./.env ]
then
    echo "Creating environment ..."
    cat .env.example > .env
else
    echo "Existing environment found."
fi

if [ ! -d ./vendor ]
then
    echo "Installing composer dependencies ..."
    docker run --rm \
        -u "$(id -u):$(id -g)" \
        -v "$(pwd):/var/www/html" \
        -w /var/www/html \
        laravelsail/php82-composer:latest \
        composer install --ignore-platform-reqs
else
    echo "Composer dependencies found."
fi

vendor/bin/sail up -d

export $(echo $(cat .env | sed 's/#.*//g'| xargs) | envsubst)
if [[ -z "${APP_KEY}" ]]; then
    echo "No application key found, generating a new one ..."
    vendor/bin/sail artisan key:generate
fi

WAIT_TIME=15
TRYS=0
until [ $TRYS -eq 6 ] || docker-compose exec mysql mysqladmin ping --silent; do
    echo "Waiting for MySQL to be available, retry $((++TRYS))"
    sleep $WAIT_TIME
done
[ $WAIT_TIME -lt 5 ]

vendor/bin/sail artisan migrate --force

if [ ! -d ./node_modules ]
then
    vendor/bin/sail npm install
else
    echo "Node dependencies already installed."
fi

if [ ! -d ./public/build ]
then
    vendor/bin/sail npm run build
else
    echo "Build already created."
fi
